services:
  mysql:
    image: 'mysql:latest'
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=go_chat
      - MYSQL_ROOT_PASSWORD=123456
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost","-u", "root", "-p123456"]
      interval: 1m30s
      timeout: 5s
      retries: 5
      start_period: 1m

  redis:
    image: 'redis:latest'
    ports:
      - "6379:6379"

  zookeeper:
    image: 'zookeeper:latest'
    ports:
      - "2181:2181"

  kafka:
    image: 'wurstmeister/kafka:latest'
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.1.12:9092 # 物理机地址
      KAFKA_CREATE_TOPICS: "go-chat:2:0"   # kafka启动后初始化一个有2个partition(分区)0个副本名叫go-chat-message的topic
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
    depends_on:
      - zookeeper

  gochat:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - REACT_APP_API_URL=http://localhost:3000
    depends_on:
      - mysql
      - redis
      - kafka
    links:
      - mysql
      - redis
      - kafka